// <auto-generated />
using System;
using AutoInsurance.Domian.AutoInsurance.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace AutoInsurance.Domian.AutoInsurance.Infrastructure.Persistence.Migrations.WorkflowCore
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("AutoInsurance.Domian.AutoInsurance.Aggreates.NaturalPersonPolicies.NaturalPersonPolicy", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateOnly>("EndCoverageDate")
                        .HasColumnType("date");

                    b.Property<DateTime>("IssueDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("NaturalPersonProposalId")
                        .HasColumnType("uuid");

                    b.Property<int>("Number")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Number"));

                    b.Property<DateOnly>("StartCoverageDate")
                        .HasColumnType("date");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("NaturalPersonProposalId");

                    b.ToTable("NaturalPersonPolicy", (string)null);
                });

            modelBuilder.Entity("AutoInsurance.Domian.AutoInsurance.Aggreates.NaturalPersonProposals.NaturalPersonProposal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateOnly>("CustomerBirthDate")
                        .HasColumnType("date");

                    b.Property<string>("CustomerCPF")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<decimal>("ProposalAmount")
                        .HasColumnType("numeric");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("VehicleFipeValue")
                        .HasColumnType("numeric");

                    b.Property<string>("VehicleLicensePlate")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("VehicleManufactureYear")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("NaturalPersonProposal", (string)null);
                });

            modelBuilder.Entity("AutoInsurance.Domian.AutoInsurance.Aggreates.NaturalPersonPolicies.NaturalPersonPolicy", b =>
                {
                    b.HasOne("AutoInsurance.Domian.AutoInsurance.Aggreates.NaturalPersonProposals.NaturalPersonProposal", null)
                        .WithMany()
                        .HasForeignKey("NaturalPersonProposalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
